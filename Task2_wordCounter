import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class WordCounter {
    private static final Set<String> commonWords = new HashSet<>();

    static {
        // Add common words or stop words to the set
        commonWords.add("the");
        commonWords.add("and");
        commonWords.add("in");
        commonWords.add("of");
        commonWords.add("a");
        commonWords.add("to");
        commonWords.add("is");
        commonWords.add("it");
        commonWords.add("that");
        commonWords.add("for");
        commonWords.add("on");
        commonWords.add("with");
    }

    public static String loadTextFromFile(String filename) {
        StringBuilder text = new StringBuilder();
        try (Scanner scanner = new Scanner(new File(filename))) {
            while (scanner.hasNextLine()) {
                text.append(scanner.nextLine()).append("\n");
            }
        } catch (FileNotFoundException e) {
            System.out.println("Error: File not found.");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
        return text.toString();
    }

    public static int countWords(String text) {
        if (text == null || text.trim().isEmpty()) {
            return 0;
        }

        // Split the text into words using space and punctuation as delimiters
        String[] words = text.replaceAll("[^a-zA-Z ]", "").toLowerCase().split("\\s+");

        // Ignore common words or stop words
        int count = 0;
        for (String word : words) {
            if (!commonWords.contains(word)) {
                count++;
            }
        }

        return count;
    }

    public static int countUniqueWords(String text) {
        if (text == null || text.trim().isEmpty()) {
            return 0;
        }

        // Split the text into words using space and punctuation as delimiters
        String[] words = text.replaceAll("[^a-zA-Z ]", "").toLowerCase().split("\\s+");

        // Ignore common words or stop words and count unique words
        Set<String> uniqueWords = new HashSet<>();
        for (String word : words) {
            if (!commonWords.contains(word)) {
                uniqueWords.add(word);
            }
        }

        return uniqueWords.size();
    }

    public static void main(String[] args) {
        System.out.println("Word Count Program");
        System.out.println("------------------");

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("Choose an option:");
            System.out.println("1. Enter text");
            System.out.println("2. Provide a file");
            System.out.println("3. Exit");
            String userChoice = scanner.nextLine();

            if (userChoice.equals("1")) {
                System.out.println("Enter the text:");
                String text = scanner.nextLine();
                int wordCount = countWords(text);
                int uniqueWordCount = countUniqueWords(text);

                System.out.println("Total word count: " + wordCount);
                System.out.println("Number of unique words: " + uniqueWordCount);
                System.out.println("------------------");
            } else if (userChoice.equals("2")) {
                System.out.println("Enter the file name (include the path if it's in a different directory):");
                String filename = scanner.nextLine();
                String text = loadTextFromFile(filename);
                int wordCount = countWords(text);
                int uniqueWordCount = countUniqueWords(text);

                System.out.println("Total word count: " + wordCount);
                System.out.println("Number of unique words: " + uniqueWordCount);
                System.out.println("------------------");
            } else if (userChoice.equals("3")) {
                System.out.println("Exiting the program.");
                break;
            } else {
                System.out.println("Invalid choice. Please try again.");
            }
        }

        scanner.close();
    }
}
